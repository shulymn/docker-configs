http:
  routers:
    authentik:
      entryPoints:
        - https
      rule: "Host(`auth.example.com`)"
      service: authentik
      middlewares:
        - crowdsec
        - securityHeaders
      tls:
        certResolver: cloudflareResolver

    radarr:
      entryPoints:
        - https
      rule: "Host(`radarr.example.com`)"
      service: radarr
      middlewares:
        - crowdsec
        - securityHeaders
        - authentik
      tls:
        certResolver: cloudflareResolver

    sonarr:
      entryPoints:
        - https
      rule: "Host(`sonarr.example.com`)"
      service: sonarr
      middlewares:
        - crowdsec
        - securityHeaders
        - authentik
      tls:
        certResolver: cloudflareResolver

    traefik:
      entryPoints:
        - https
      rule: "Host(`traefik.example.com`)"
      service: traefik
      middlewares:
        - crowdsec
        - securityHeaders
        - authentik
      tls:
        certResolver: cloudflareResolver

    www:
      entryPoints:
        - https
      rule: "Host(`www.example.com`)"
      service: www
      middlewares:
        - securityHeaders
        - authentik
      tls:
        certResolver: cloudflareResolver

  services:
    authentik:
      loadBalancer:
        servers:
          - url: http://192.168.69.71:9000

    radarr:
      loadBalancer:
        servers:
          - url: http://192.168.69.70:7878

    sonarr:
      loadBalancer:
        servers:
          - url: http://192.168.69.70:8989
        serversTransport: sonarrTransport  # Correctly reference the transport defined in the same file to lengthen timeouts

    traefik:
      loadBalancer:
        servers:
          - url: http://192.168.69.71:8183

    www:
      loadBalancer:
        servers:
          - url: http://192.168.69.70:3443


  middlewares:
    authentik:
      forwardAuth:
        address: http://192.168.69.71:9000/outpost.goauthentik.io/auth/traefik
        trustForwardHeader: true
        authResponseHeaders:
          - X-authentik-username
          - X-authentik-groups
          - X-authentik-entitlements
          - X-authentik-email
          - X-authentik-name
          - X-authentik-uid
          - X-authentik-jwt
          - X-authentik-meta-jwks
          - X-authentik-meta-outpost
          - X-authentik-meta-provider
          - X-authentik-meta-app
          - X-authentik-meta-version
    redirect-to-www:
      redirectRegex:
        regex: "^https://example.com(.*)"
        replacement: "https://www.example.com$1"
        permanent: true
    securityHeaders:
      headers:
        customResponseHeaders:
          X-Robots-Tag: "none,noarchive,nosnippet,notranslate,noimageindex"
          X-Forwarded-Proto: "https"
          server: ""
        customRequestHeaders:
          X-Forwarded-Proto: "https"
        sslProxyHeaders:
          X-Forwarded-Proto: "https"
        referrerPolicy: "same-origin"
        hostsProxyHeaders:
          - "X-Forwarded-Host"
        contentTypeNosniff: true
        browserXssFilter: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsSeconds: 63072000
        stsPreload: true
    brotli:
      compress: {}
    crowdsec:
      plugin:
        bouncer:
          enabled: true
          logLevel: info
          updateIntervalSeconds: 15
          updateMaxFailure: 0
          defaultDecisionSeconds: 15
          httpTimeoutSeconds: 10
          crowdsecMode: stream
          crowdsecLapiKey: pOeRXHPc4jD9NmE7cOFuJ65vtHDvi/ABpv8sWbAz6Lk
          crowdsecLapiHost: crowdsec:8080
          crowdsecLapiScheme: http
          forwardedHeadersTrustedIPs:
            - 172.19.0.0/16
          clientTrustedIPs:
            - 192.168.69.0/24 #your local network
            - 172.19.0.0/16
    redirect-to-home:
      redirectRegex:
        regex: "^https://(?:hs|old|another)\\.example\\.com(.*)"
        replacement: "https://www.example.com$1"
        permanent: true
    

  serversTransports:
    sonarrTransport:
      forwardingTimeouts:
        dialTimeout: 600s       # Custom dialTimeout for this service
        idleConnTimeout: 600s   # Custom idleConnTimeout for this service
        responseHeaderTimeout: 30m # Custom responseHeaderTimeout for this service
